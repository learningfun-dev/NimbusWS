services:
  redis:
    image: redis:7
    container_name: redis
    restart: always
    profiles: [dev, all]
    ports:
      - "6379:6379"
    volumes:
      - ./vol-data/redis/data:/db
  redis-insight:
    image: redis/redisinsight:latest
    restart: always
    profiles: [dev, all]
    container_name: redis-insight
    ports:
      - "5540:5540"
    depends_on:
      - redis
    volumes:
      - ./vol-data/redis-insight:/data
  kafka_broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    profiles: [dev, all]
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_SHARE_COORDINATOR_STATE_TOPIC_MIN_ISR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      KAFKA_NUM_PARTITIONS: 3
    depends_on:
      - redis
  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    profiles: [dev, all]
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka_broker:19092
    depends_on:
      - redis
  dynamodb-local:
    command: "-jar DynamoDBLocal.jar -sharedDb -dbPath ./data"
    image: "amazon/dynamodb-local:latest"
    container_name: dynamodb-local
    profiles: [dev, all]
    ports:
      - "8000:8000"
    restart: always
    volumes:
      - "./vol-data/dynamodblocal/data:/home/dynamodblocal/data"
    working_dir: /home/dynamodblocal

  dynamodb-admin: 
    image: "aaronshaf/dynamodb-admin"
    container_name: dynamodb-admin
    profiles: [dev, all]
    depends_on:
      - dynamodb-local
    restart: always
    ports:
      - "8001:8001"
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb-local:8000
      - AWS_REGION=us-east-1
  numbusws:
    image: numbusws
    build:
      dockerfile: dockerfile
    container_name: ws-kafka-gateway
    profiles: [numbusws, all]
    ports:
      - '3000:80'
    environment:
      port: 80
      services_kafka_url: 'broker:19092'
    depends_on:
      - redis
      - kafka_broker
networks:
  default:
    driver: bridge
